Versions:
Each test will be run on all desired versions of Blender (see Test.py)

Import Tests:
These tests test importing an asset and compare it to a previously imported asset that has been manually verified to be imported correctly
These files must in Tests/Content/Import Tests/, and the .blend name must have a single collection who's name matches that of an asset in the same directory
That asset will then be imported, and all geometry, objects, and properties will be compared to the collection that was already imported.
Any differences will cause the test to fail.
Importer.blend must exist in Tests/Content. This is just to open so we get the base file path to work with

Export Tests:
These tests test exporting an asset, the exported file is then compared to a known good file that was exported and manually verified to be correct
These files should be in Tests/Content/Export Tests. Like import tests, they should have a single collection who's name matches that of the asset to export
For example,  a line test file might have a collection MyLine.lin. There should then in the same folder be a file MyLine.good.lin which the exported file will be compared to. 
The exported file would be named MyLine.test_result.<blender version>.lin
Exporter.blend must exist in Tests/Content. This is just to open so we get the base file path to work with

Internal Tests:
This just calls the internal test operator. These do provide some usage but should really be rewritten to be more comprehensive.

Bake Test:
This bakes opens Test/Content/BakeTest.blend and runs the included high poly to low poly baker. Then, the test compares the
that have been produced to those saved in Tests/Content (BakeTest_LOD<suffix>.good.png). Please note the X-Plane Extensions preferences
must specify the following suffixes (these are default):
Albedo: None
Combined Normal: _NML
Lit: _LIT
LOD Bake: _LOD
This test also depends on all the textures used by BakeTest to be present. Currently these are Alb.png, Lit.png, and Nml.png

Results will be written to Tests/Test Results.csv in the form of <blender version>\n<test name>,<pass/fail>,<percentage similarity if applicable>,<messages>